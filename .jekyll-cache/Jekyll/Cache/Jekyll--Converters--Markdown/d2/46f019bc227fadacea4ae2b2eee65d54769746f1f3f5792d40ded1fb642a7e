I"Ò<h1 id="ocr-modelle">OCR-Modelle</h1>

<p>F√ºr die Texterkennung wird ein geeignetes OCR-D-Modul und ein dazu passendes
Sprach-/Schriftmodell ben√∂tigt. Diese Seite gibt einen √úberblick √ºber die
wichtigsten Modelle und Modell-Repositorien.</p>

<h2 id="ocrd-tesserocr-recognize">ocrd-tesserocr-recognize</h2>

<p>Dieser Prozessor verwendet Tesseract (ab Version 4.1) f√ºr die Texterkennung. Tesseract ben√∂tigt
<em>Sprach-</em> oder <em>Schriftmodelle</em>. Dies sind Dateien in einem speziellen Format (<code class="language-plaintext highlighter-rouge">*.traineddata</code>). Sie enthalten
mindestens eine Liste mit dem Erkennungs-Zeichensatz (‚Äúunicharset‚Äù) und die Gewichte des neuronalen Erkennungs-Modells (‚Äúlstm‚Äù), optional auch noch W√∂rterb√ºcher (‚Äúwordlist‚Äù/‚Äùdawg‚Äù) und weitere Komponenten.
Sprachmodelle sind im Zeichensatz und im W√∂rterbuch auf eine Muttersprache (z. B. <code class="language-plaintext highlighter-rouge">deu</code> = Deutsch) beschr√§nkt.
Schriftmodelle dagegen enthalten einen umfangreicheren Zeichensatz und W√∂rterb√ºcher aus mehreren Sprachen mit der gleichen Schrift (z. B. <code class="language-plaintext highlighter-rouge">Latin</code> = lateinische Schrift mit Englisch, Deutsch, Franz√∂sisch,
Spanisch, Italienisch, ‚Ä¶).</p>

<p>F√ºr Tesseract gibt es mehr als 100 Sprach- und Schriftmodelle, die von Google mittels synthetischer Daten
(d.h. per Rasterung gro√üer Mengen von Text mit vielen verschiedenen Vektorfonts) erzeugt (‚Äútrainiert‚Äù)
wurden. Daneben gibt es aber auch noch weitere Modelle von anderen Anbietern, und man kann auch eigene
Modelle entweder komplett neu oder auf Basis vorhandener Modelle erstellen. Eigenes Training wird durch
<a href="https://github.com/tesseract-ocr/tesstrain">tesstrain</a> gut unterst√ºtzt.</p>

<p>Die Modelle von Google gibt es jeweils in drei Varianten:</p>

<p><a href="https://github.com/tesseract-ocr/tessdata_fast"><code class="language-plaintext highlighter-rouge">tessdata_fast</code></a> Diese Variante wird auch von den meisten
Linux-Distributionen angeboten und ist besonders schnell bei der Texterkennung. Sie verwendet neuronale Netzwerke.</p>

<p><a href="https://github.com/tesseract-ocr/tessdata_best"><code class="language-plaintext highlighter-rouge">tessdata_best</code></a> Diese Variante braucht deutlich mehr Zeit bei der
Texterkennung, kann aber im Einzelfall(nicht generell!) bessere Ergebnisse liefern. Sie verwendet neuronale Netzwerke.
Eigenes Training neuer Modelle auf Basis vorhandener Modelle setzt ebenfalls diese Variante voraus.</p>

<p><a href="https://github.com/tesseract-ocr/tessdata"><code class="language-plaintext highlighter-rouge">tessdata</code></a> Diese Variante ist √§hnlich schnell wie tessdata_fast, enth√§lt
aber zus√§tzlich zu den neuronalen Netzwerken auch noch die musterbasierte Zeichenerkennung von Tesseract 3.
Man kann damit also zwei unterschiedliche Texterkennungsmethoden kombinieren, was in Einzelf√§llen zu besseren Ergebnissen
f√ºhren kann.</p>

<h3 id="schrift--und-sprachmodelle-f√ºr-historische-drucke">Schrift- und Sprachmodelle f√ºr historische Drucke</h3>

<p>Die folgenden Modelle f√ºr Tesseract gibt es:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">deu_frak</code> √Ñlteres Sprachmodell f√ºr deutsche Fraktur. Dieses Modell war mit Tesseract 3 gebr√§uchlich, ist aber heute nicht mehr zu empfehlen.</li>
  <li><code class="language-plaintext highlighter-rouge">deu</code> Sprachmodell f√ºr deutsche Antiqua, das aber auch etwas Fraktur erkennen kann.</li>
  <li><code class="language-plaintext highlighter-rouge">frk</code> Sprachmodell f√ºr deutsche Fraktur, das aber auch etwas Antiqua erkennen kann.</li>
  <li><code class="language-plaintext highlighter-rouge">Latin</code> Schriftmodell f√ºr lateinische Antiqua-Schriften, das aber auch etwas Fraktur erkennen kann.</li>
  <li><code class="language-plaintext highlighter-rouge">Fraktur</code> Schriftmodell f√ºr Fraktur-Schriften, das aber auch Antiqua-Schriften ganz gut erkennt. Fehler beim
Erzeugen dieses Modells haben zur Folge, dass es kein Paragraphzeichen kennt und die Ligaturen <code class="language-plaintext highlighter-rouge">ch</code> und <code class="language-plaintext highlighter-rouge">ck</code>
h√§ufig als Kleiner- und Gr√∂√üerzeichen ‚Äúerkennt‚Äù.</li>
</ul>

<p>Weitere Frakturmodelle. Ausgehend von Fraktur sind mit Hilfe von <a href="https://zenodo.org/record/1344132">GT4HistOCR</a>
weitere Modelle der <a href="https://ub-backup.bib.uni-mannheim.de/~stweil/ocrd-train/data/Fraktur_5000000/">UB Mannheim</a>
erzeugt worden, die f√ºr ein breites Spektrum historischer Drucke gute Ergebnisse liefern.</p>

<p>Schrift- und Sprachmodelle k√∂nnen in Tesseract auch kombiniert werden, was in
der Regel noch bessere Ergebnisse bringt, allerdings dann auch mehr Zeit
kostet.</p>
:ET