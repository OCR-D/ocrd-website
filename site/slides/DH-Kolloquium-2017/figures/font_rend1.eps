%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (figures/font_rend1.eps)
%%CreationDate: (2017-08-04T13:51:58+02:00)
%%BoundingBox: -0 -0 576 55
%%HiResBoundingBox: 0 0 576 55
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 576 55
userdict begin
DisplayImage
0 0
576 55
12
576 55
1
1
1
1
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFF07FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFF07FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF07F
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF87FFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9FFFF7FFFFBFEFFFFFF3FFDFFFFFFF9
FFFEFFFFCFFCFFFFFF7FFFE7FFFFFBFFFFBFFFCFFEFFBFFFFFFF9FFEFFF3FFFE7FFF9FFDFFFFBF
FFFCFFFFFFFCFFFF3FF7FFFFBFEFFFFFFFF803FF0003F1FC7FE03F03FC00FFFFF8003E0007C3FC
1FFFFE0007E1FFFFF0003F00FFC1FC7F1FFFFFFF87FC1FF001FE003F87FC00FF0000FC000FFFFC
007F07F0003F1FC7FFFFFFF0001E0000F1FC0F800E0078001FFFF0000C0001C07C03FFFE0001C0
1FFFF0000F000FC03C7F03FFFFFF80FC03F0001C000780F8001F00003C0007FFF8000F00E0000F
1FC0FFFFFFF0000E0000E0FC07800E0078001FFFF000040001803C01FFFE0000C00FFFF0000700
07C0183F01FFFFFF007C03E0001C00030078001F00003C0003FFF800070060000E0FC07FFFFFF0
000E0000E07C07800E0078000FFFF000040001803801FFFE0000C00FFFF00007000380181F01FF
FFFF007C03E0000C00030078000F00003C0003FFF800060060000E07C07FFFFFF0000E0000E03C
03800E0038000FFFF000040001803801FFFE0000C00FFFF00007000380180F00FFFFFF007C03E0
000C00030078000F00003C0003FFF800060060000E03C03FFFFFF0000E0000F01C03800E003800
0FFFF000040001C03C01FFFE0000C00FFFF000070003C01C0700FFFFFF807C03F0000C00038078
000F00003C0003FFF800070060000F01C03FFFFFF8000F0000F00E03800F007C000FFFF8000E00
01C03C01FFFE0000E00FFFF000070001C01C0380FFFFFF807C03F0000E0003807C000F00003C00
03FFFC00070070000F00E03FFFFFFC000F8001F80707C01F807E000FFFFC001F0003E03E01FFFF
8001F00FFFFC000FC001E01E01C1FFFFFFC07F03F8000F0003C07E000FC0003C0003FFFE000780
78001F80707FFFFFF9FFCFFFF3FC0307FFFFFC7FFF0FFFFFFF9FFFE7FE3FF3FFFFFFF9FEFFFFFF
FFCFFFF1FF3F00C1FFFFFFFC7FF3FCFF8FFFE3FC7FFF0FE7FE7FFFC3FFFFFFC7FCFFFF3FC0307F
FFFFF1FFCFFFE7F8003FFFFFFCFFFF8FFFFFFF9FFFCFFF3FE3FFFFFFF3FCFFFFFFFF9FFFF9FE3E
000FFFFFFFFE7FF3F8FF8FFFF3FE7FFF8FC7FE7FFFE3FFFFFFE7F8FFFE7F8003FFFFFFF3FFCFFF
E7F0007FFFFFF8FFFF8FFFFFFF9FFFCFFF3FE7FFFFFFF3FCFFFFFFFF9FFFF9FE7C001FFFFFFFE6
7FF3F9FFCFFFF3E67FE78F8FFC7FFFC7FFFFFFE7F9FFCE7F0007FFFFFFF3FFCFFFE7F1807FFFFF
F9FFFF8FFFFF039FFFCFFF3FC7FFFFFFF3FCFFFFFFFF9FFFF9FC7C601FFFFFFFE27FF3F9FFCFFF
F3E27FE38F8FFC7FFFC7FFFFFFE7F1FFC67F1807FFFFFFF3FFCFFFC7E1C03FFFFFF9FFFF9FFFFE
019FFF8FFF3F8FFFFF1FE3F8FFFFF8FF1FFFF9F8F8700FFFFFFFE67FF3F9FFCFFFF3E67FE79F8F
FC7FFF8FFFFFFFE7E3FFCC7E1C03FFFFFFF3FFCFFFC7E1E01FFFFFF9FFFF9FFFFE019FFF8FFF3F
9FFFFE1FE3F87FFFF0FF1FFFF1F9F87807FFFFFFFE7FF3F9FFCFFFF3FE7FFF9F8FFC7FFF1FFFFF
FFE7E7FFFC7E1E01FFFFE7F3FFCFFFC7E1F00FFFFFF1FFFF3FFFFFCF9FFF8FFF3FFFFFFE1FE1F8
7FFFF0FF0FFFE1FFF87C03FFFFF3FE7FF3F8FFCFFFF3FE7FFF3F8FFC7FFE3FFFFFFFE7FFFFFC7E
1F00FFFFC7F0000FFFC3E0780FFFFFF1FC0007FFFFCF9FFF87FF3FFFFFFE1FE1F87FFFF0FF0F80
01FFF81E03FFFFE3FE7801C0FFCFFFF3FE7C00078FFC7FF8FFFFFFFFE7FFFFFC3E0780FFFF83F0
000FFFC3E03C07FFFFF1F80007FFFFCF9FFF87FF3FFFFFFE1FE1F87FFFF0FF0F0001FFF80F01FF
FFC1FE7801C0FFCFFFF3FE7800078FFC3FF1FFFFFFFFE7FFFFFC3E03C07FFF01F0000FFFC3F01C
07FFFFF1F80007FFFFFF9FFF87FF3FFFFFFE1FF1F87FFFF0FF8F0003FFFC0701FFFF80FE700180
FFCFFFF3FE78000787FC3FF1FFFFFFFFE7FFFFFC3F01C07FFF01F0000FFFC3F01E07FFFFF1F800
0FFFFFFF9FFF87FF3FFFFFFE1FF1F87FFFF0FF8F0003FFFC0781FFFF80FE700180FFCFFFF3FE78
000F87FC3FE1FFFFFFFFE7FFFFFC3F01E07FFF81F0000FFFC3F01F07FFFFF1F8000FFFFFFF9FFF
87FF3FFFFFFE1FF1F87FFFF0FF8F0007FFFC07C1FFFFC1FE700180FFCFFFF3FE78000F8FFC3FE1
FFFFFFFFE7FFFFFC3F01F07FFFC3F0000FFFC7C01F87FFFFF1F0000FFFFFFF9FFF8FFF3FFFFFFE
3FE1F87FFFF1FF0E000FFFF007E1FFFFE1FE700180FFCFFFF3FE70000F8FFC7FE1FFFFFFFFE7FF
FFFC7C01F87FFFC7F0000FFFCFC01FCFFFFFF1F0000FFFFFFF1FFF9FFF3FFFFFFE7FE3F8FFFFF3
FF1E001FFFF007F3FFFFE3FE700301FFDFFFF3FE70000F1FFCFFF3FFFFFFFFE7FFFFFCFC01FCFF
FFC7FFFFFFFFFFFFFFFFFFFFF1FFFFFFFFFFFF1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF8FFFFFFFFF
FFFFFFFFFFFFF1FFFFFFFFFFFF1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF8FFFFFFFFF03FF81FFFFFF
F1FF99FFFFFFFF0FFFCFFFFFFFFFFFFFFFF33FFFFFFFFFE07FFFFFE67FFFFFFFFFFFFFFF99FFFF
81FFFFFFFFFC0FFFF3FFFFFFFFFFFFFFFE7FF81FFFFF9FFFFFFFFE01FF00FFFFFFF1FF18FFFFFF
FF0FFFC7FFFFFFFFFFFFFFE31FFFFFFFFFC03FFFFFC63FFFFFFFFFFFFFFF18FFFF00FFFFFFFFF8
07FFF1FFFFFFFFFFFFFFFE3FF00FFFFFBFFFFFFFFE01FF00FFFFFFF1FF18FFFFFFFF0FFFCFFFFF
FFFFFFFFFFE31FFFFFFFFFC03FFFFFC63FFFFFFFFFFFFFFF18FFFF00FFFFFFFFF807FFF3FFFFFF
FFFFFFFFFE7FF00FFFFFBFFFFFFFFFCFFFE7FFFFFFF1FFFFFFFFFFFF0FFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFF9FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFCFFFE7FFFFFFF1FFE7FFFFFFFF1FFFCFFFFFFFFFFFFFFFFCFFFFFFFFFFF9
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE7FFFFFFFFFFFFFFF3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFCFFFE7FFFFFFF1FFC7FFFFFFFF1FFFC7FFFFFFFFFFFFFFF8FFFFFFFFFFF9FFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFE7FFFFFFFFFFFFFFF1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFF3FFE7FFFFFFFF1FFFCFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFF3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
end
%%PageTrailer
%%Trailer
%%EOF
